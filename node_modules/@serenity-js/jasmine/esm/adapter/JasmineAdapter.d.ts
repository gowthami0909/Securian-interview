import type { TestRunnerAdapter } from '@serenity-js/core/lib/adapter/index.js';
import type { ModuleLoader } from '@serenity-js/core/lib/io/index.js';
import type { Outcome } from '@serenity-js/core/lib/model/index.js';
import type { JasmineConfig } from './JasmineConfig.js';
/**
 * Allows for programmatic execution of Jasmine test scenarios,
 * using [`SerenityReporterForJasmine`](https://serenity-js.org/api/jasmine/function/default/) to report progress.
 *
 * ## Learn more
 * - [`TestRunnerAdapter`](https://serenity-js.org/api/core-adapter/interface/TestRunnerAdapter/)
 *
 * @group Integration
 */
export declare class JasmineAdapter implements TestRunnerAdapter {
    private readonly config;
    private readonly loader;
    private runner;
    private totalScenarios;
    private static readonly defaultConfig;
    constructor(config: JasmineConfig, loader: ModuleLoader);
    /**
     * Scenario success threshold for this test runner.
     */
    successThreshold(): Outcome | {
        Code: number;
    };
    /**
     * Loads test scenarios.
     *
     * @param pathsToScenarios
     */
    load(pathsToScenarios: string[]): Promise<void>;
    private configureSpecFilter;
    private loadSpecs;
    private specFilter;
    /**
     * Returns the number of loaded scenarios
     */
    scenarioCount(): number;
    private countScenarios;
    /**
     * Runs loaded test scenarios.
     */
    run(): Promise<void>;
}
//# sourceMappingURL=JasmineAdapter.d.ts.map